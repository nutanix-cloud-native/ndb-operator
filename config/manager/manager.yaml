apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
        - args:
            - --leader-elect
          image: controller:latest
          name: manager
          volumeMounts:
            - name: varlog
              mountPath: /var/log
          securityContext:
            allowPrivilegeEscalation: false
          # TODO(user): uncomment for common cases that do not require escalating privileges
          # capabilities:
          #   drop:
          #     - "ALL"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
        - name: filebeat
          image: elastic/filebeat:7.16.3
          args:
            - -c
            - /etc/filebeat/conf.yaml
            - -e
          securityContext:
            runAsUser: 9999
          volumeMounts:
            - name: filebeat-config
              mountPath: /etc/filebeat
            - name: varlog
              mountPath: /var/log
      volumes:
        - name: varlog
          emptyDir: {}
        - name: filebeat-config
          configMap:
            name: filebeat-config
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
